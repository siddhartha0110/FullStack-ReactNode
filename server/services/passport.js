const passport = require('passport')
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const keys = require('../config/keys');
const mongoose = require('mongoose')
const User = mongoose.model('users');

passport.serializeUser((user, done) => {
    //user.id is not the profile id. It is the _id generated by the mongoDB 
    //Generate Cookie
    done(null, user.id);
})

passport.deserializeUser((id, done) => {
    //Check user using cookie
    User.findById(id)
        .then(user => {
            done(null, user);
        })
});


passport.use(new GoogleStrategy({
    clientID: keys.googleClientID,
    clientSecret: keys.googleClientSecret,
    callbackURL: '/auth/google/callback',
    proxy: true
},
    async (accessToken, refreshToken, profile, done) => {
        const existingUser = await User.findOne({ googleId: profile.id })
        if (existingUser) {
            //Record Already Exists
            return done(null, existingUser);
            //Go to serialize user
        }
        //Create new user
        const user = await new User({ googleId: profile.id }).save()
        done(null, user);
        //Go to serialize user

    })
)
